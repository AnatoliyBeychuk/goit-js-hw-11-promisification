{"version":3,"sources":["js/task3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","Promise","resolve","reject","delay","setTimeout","id","logSuccess","time","console","log","logError","warn","amount","then","catch"],"mappings":";;;AAsDA,aAtDA,QAAA,qBAEA,IAAMA,EAA4B,SAACC,EAAKC,GAE/BC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,EAAkB,SAACC,GAEd,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAEnBC,IAAAA,EAAQX,EAA0B,IAAK,KAC7CY,WAAW,WAEYT,KAAKE,SAAW,IAG/BI,EAAQ,CAAOF,GAAAA,EAAYM,GAAYF,KAAAA,IAE3CD,EAAOH,EAAYM,KACpBF,MAILG,EAAa,SAAgB,GAAdD,IAAAA,EAAAA,EAAAA,GAAIE,EAAAA,EAAAA,KACvBC,QAAQC,IAAmBJ,eAAAA,OAAAA,EAAmBE,kBAAAA,OAAAA,EAA9C,QAGIG,EAAW,SAAAL,GACfG,QAAQG,KAAqCN,gCAAAA,OAAAA,EAA7C,+BAaFP,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAC/BC,KAAKP,GACLQ,MAAMJ,GAETZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAC/BC,KAAKP,GACLQ,MAAMJ,GAETZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,KAC/BC,KAAKP,GACLQ,MAAMJ,GAETZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAC/BC,KAAKP,GACLQ,MAAMJ","file":"task3.5f7c9aab.js","sourceRoot":"../src","sourcesContent":["import '../scss/main.scss';\n\nconst randomIntegerFromInterval = (min, max) =>\n{\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) =>\n{\n    return new Promise((resolve, reject) =>\n    {\n        const delay = randomIntegerFromInterval(200, 500);\n        setTimeout(() =>\n        {\n            const canProcess = Math.random() > 0.3;\n            if (canProcess)\n            {\n                resolve({'id': transaction.id, 'time': delay});\n            }\n            reject(transaction.id);\n        }, delay);\n    });\n};\n\nconst logSuccess = ({id, time}) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n/*\n * Работает так\n */\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n/*\n * Должно работать так\n */\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);"]}